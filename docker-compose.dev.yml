version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: blog-postgres
    environment:
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blogdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloguser -d blogdb"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - blog-network

  # Application backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://bloguser:password@postgres:5432/blogdb
      - JWT_SECRET=dev-jwt-secret-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_SECRET=dev-refresh-secret-key
      - JWT_REFRESH_EXPIRES_IN=7d
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=admin123
      - PORT=3001
      - SEED_DB=true
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
      - AUTH_RATE_LIMIT_MAX=5
      - MAX_FILE_SIZE=10485760
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - blog-network

  # Adminer pour gérer la base de données (optionnel)
  adminer:
    image: adminer:4.8.1
    container_name: blog-adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local