#!/bin/bash
set -e

echo "üöÄ D√©marrage de l'application blog-backend..."
echo "üåç Environnement: ${NODE_ENV:-development}"
echo "üîß Port: ${PORT:-3001}"

# Attendre que la base de donn√©es soit disponible
echo "üîç V√©rification de la base de donn√©es..."
node scripts/wait-for-db.mjs

# G√©n√©rer le client Prisma (au cas o√π)
echo "‚öôÔ∏è  G√©n√©ration du client Prisma..."
npx prisma generate

# Ex√©cuter les migrations Prisma
echo "üîÑ Ex√©cution des migrations de base de donn√©es..."
npx prisma migrate deploy

# V√©rifier si la base est vide pour d√©cider du seeding
echo "üîç V√©rification de l'√©tat de la base de donn√©es..."
ROLE_COUNT=$(node -e "
import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();
prisma.role.count().then(count => {
  console.log(count);
  prisma.\$disconnect();
}).catch(() => {
  console.log(0);
  prisma.\$disconnect();
});
" 2>/dev/null || echo "0")

# Ex√©cuter le seeding si n√©cessaire
if [ "$NODE_ENV" = "production" ] || [ "$SEED_DB" = "true" ] || [ "$ROLE_COUNT" = "0" ]; then
  echo "üå± Ex√©cution du seeding de la base de donn√©es..."
  npm run db:seed
else
  echo "‚è≠Ô∏è  Seeding ignor√© (NODE_ENV=$NODE_ENV, SEED_DB=$SEED_DB, ROLES_EXIST=$ROLE_COUNT)"
fi

# D√©marrer l'application
echo "‚ú® D√©marrage de l'application sur le port ${PORT:-3001}..."
exec npm start